version: "3.7"

x-restart-policy: 
  restart: &default-restart-policy unless-stopped
  
services:
  traefik:
    image: traefik:v2.8.3
    restart: *default-restart-policy
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --log.level=DEBUG
      - --accesslog=true
      - --accesslog.format=json
      - --accesslog.filepath=/var/log/traefik/access.log.json
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --certificatesresolvers.le.acme.email=${ACL_SERACH_LETS_ENCRYPT_EMAIL}
      - --certificatesResolvers.le.acme.httpChallenge.entrypoint=web
      - --certificatesresolvers.le.acme.storage=/certs/acme.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=https-redirect
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true

    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/certs

  frontend:
    image: timbmg/acl-search-frontend:latest
    build: 
      context: ./frontend
    restart: *default-restart-policy
    expose:
      - 80
      - 443
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.priority=1
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.tls=true
      - traefik.http.routers.frontend.tls.certresolver=le
      - traefik.http.routers.frontend.rule=Host(`aclsearch.live`)
  
  index-worker: &index
    image: timbmg/acl-search-index:latest
    build: 
      context: ./index
    command: celery -A index.core worker -l DEBUG
    restart: *default-restart-policy
    environment:
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      REDIS_HOST: redis
      REDIS_PORT: 6379
    env_file:
      - .env
      - ./rabbitmq/.env
    volumes:
      - ./index/venues.yaml:/venues.yaml
  
  index-beat:
    <<: *index
    command: celery -A index.core beat -l DEBUG

  search:
    image: timbmg/acl-search-search:latest
    build: 
      context: ./search
    command: uvicorn search.main:app --host 0.0.0.0 --port 8000 --log-config logging.conf --no-use-colors
    restart: *default-restart-policy
    ports:
      - 8000:8000
    environment:
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.http.routers.search.entrypoints=websecure
      - traefik.http.routers.search.tls=true
      - traefik.http.routers.search.tls.certresolver=le
      - traefik.http.routers.search.rule=PathPrefix(`/api/search`)

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    restart: *default-restart-policy
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ingest.geoip.downloader.enabled=false
      # allow running with low disk space
      - cluster.routing.allocation.disk.threshold_enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cat/health | grep -q green" ]
      interval: 30s
      timeout: 30s
      retries: 3
  
  redis:
    image: redis:7.0.4-alpine
    restart: *default-restart-policy
    ports:
      - 6379
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes: 
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3

  rabbitmq:
    image: rabbitmq:3.10.7
    restart: *default-restart-policy
    ports:
      - 5672
      - 15672
    env_file:
      - ./rabbitmq/.env
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

volumes:
  certs:
    driver: local
  elasticsearch_data:
    driver: local
  redis_data:
    driver: local
